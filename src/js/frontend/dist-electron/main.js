"use strict";var C=Object.defineProperty;var U=(r,t,s)=>t in r?C(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s;var n=(r,t,s)=>(U(r,typeof t!="symbol"?t+"":t,s),s);const{app:g,BrowserWindow:m,ipcMain:d}=require("electron"),{SerialPort:S,DelimiterParser:w}=require("serialport"),{existsSync:f}=require("fs"),{Daemon:P,Listener:b}=require("node-gpsd"),{Logger:G}=require("./logger.cjs"),k=require("path");function M(r="/",t,s){let o=new m({width:1420,height:900,title:t,icon:s,webPreferences:{nodeIntegration:!0,contextIsolation:!0,preload:k.join(__dirname,"preload.js")},autoHideMenuBar:!0});return console.log(o),o.loadURL(`${process.env.VITE_DEV_SERVER_URL}/#${r}`),o}g.whenReady().then(()=>{let r={MCU:{path:"COM3",baudRate:115200},GPS:{path:"/dev/ttyAMA0"}},t=M("/","main","../assets/dashboard.ico");M("/cameras","cameras","/cameras.ico");let s=new R(r,G);s.callback=(o,p)=>{t.webContents.send(o,p)},d.on("gps-data",()=>{s.sendMessage("gps-data")}),d.on("bms-data",()=>{s.sendMessage("bms-data")}),d.on("bms-restart",()=>{s.sendMessage("bms-restart")}),s.start()});g.on("window-all-closed",()=>{g.quit()});class R{constructor(t,s){n(this,"logger");n(this,"config");n(this,"ports");n(this,"callback");n(this,"continue");this.logger=new s,this.config=t,this.ports={MCU:{enabled:!1,port:null,parser:null,data:{voltage:"0v",cells:"0",mean:"0v",stddev:"0v",alerts:[],current:"0A",SOC:"0%",uptime:["0","0","0"]}},GPS:{enabled:!1,data:{speed:0,lon:0,lat:0}}},this.continue={MCU:!0,GPS:!0},this.callback=()=>{console.log("callback not set")}}start(){this.logger.warn("Logger initialized in backend!"),this.initMCU(),this.initGPS()}async initMCU(){f(this.config.MCU.path)?(this.logger.success("MCU serial port is being opened..."),this.ports.MCU.enabled=!0,this.ports.MCU.port=new S({path:this.config.MCU.path,baudRate:this.config.MCU.baudRate,autoOpen:!1}),this.ports.MCU.parser=this.ports.MCU.port.pipe(new w({delimiter:"sh"})),this.ports.MCU.port.on("open",()=>{this.logger.success("MCU serial port opened"),this.continue.MCU=!0}),this.ports.MCU.parser.on("data",t=>{this.parseBMSData(t.toString().split(`
`))}),this.ports.MCU.port.on("error",t=>{}),this.ports.MCU.port.on("close",()=>{this.logger.warn("MCU serial port closed"),this.continue.MCU=!1}),this.ports.MCU.port.on("drain",()=>{this.logger.success("MCU serial port drained (write failed)")}),this.ports.MCU.port.open(t=>{t&&console.error(t)})):this.logger.fail("MCU serial port not found at "+this.config.MCU.path)}initGPS(){f(this.config.GPS.path)?(this.ports.GPS.enabled=!0,this.ports.GPS.daemon=new P({program:"gpsd",device:this.config.GPS.path,port:2947,pid:"/tmp/gpsd.pid",readOnly:!1,logger:{info:function(){},warn:console.warn,error:console.error}}),this.ports.GPS.listener=new b({port:2947,hostname:"localhost",logger:{info:function(){},warn:console.warn,error:console.error},parse:!0}),this.ports.GPS.daemon.start(()=>{this.logger.success("GPS daemon started")}),this.ports.GPS.listener.connect(()=>{this.logger.success("Connected to gpsd"),this.ports.GPS.listener.watch()}),this.ports.GPS.listener.on("TPV",t=>{this.parseGPSData(t)})):this.logger.fail("GPS device not found at "+this.config.GPS.path)}stopMCU(){var t;this.continue.MCU=!1,(t=this.ports.MCU.port)==null||t.close(),this.logger.warn("MCU serial port closed")}parseBMSData(t){try{t.shift(),t.shift(),t.pop(),t=t.map(e=>e.split(":").map(l=>l.trim())),t=t.map(e=>e.map(l=>l.replace(/\r/g,""))),t=t.map(e=>e.map(l=>l.replace(/\s/g,"")));let s=[],o=t.findIndex(e=>e[0]==="alerts"),p=t.findIndex(e=>e[0]==="current");for(let e=o;e<p;e++)t[e][1]!==""&&s.push(t[e][1]);let i={};for(let e of t)e[0]!==""&&(i[e[0]]=e[1]);i.alerts=s;let a=i.uptime.split(""),c=[];for(let e=0;e<a.length;e++)isNaN(a[e])?a[e].match(",")&&c.push(a[e]):c.push(a[e]);i.uptime=c.join("").split(",");let h=i.cells.split(""),u=[];for(let e=0;e<h.length;e++)isNaN(h[e])||u.push(h[e]);return i.cells=u.join(""),this.ports.MCU.data=i,this.ports.MCU.data}catch(s){return this.logger.warn("Error parsing BMS data: "+s),this.ports.MCU.data}}parseGPSData(t){return t.speed&&(this.ports.GPS.data.speed=t.speed),t.lon&&(this.ports.GPS.data.lon=t.lon),t.lat&&(this.ports.GPS.data.lat=t.lat),this.ports.GPS.data}sendMessage(t){t=="bms-restart"?(this.stopMCU(),this.initMCU()):t=="bms-data"?this.callback(t,this.ports.MCU.data):t=="gps-data"&&this.callback(t,this.ports.GPS.data)}}
